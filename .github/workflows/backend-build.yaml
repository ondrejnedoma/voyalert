name: BUILD backend => Docker Hub

on:
  push:
    branches: ['master']
  workflow_dispatch:

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
jobs:
  evaluate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.compare-versions.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Ger package.json version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/backend
      - name: Compare package.json version and latest Docker Hub tag
        id: compare-versions
        env:
          PACKAGE_JSON_VERSION: ${{ steps.package-version.outputs.current-version }}
        run: |
          DOCKER_HUB_TAG=$(curl -s "https://hub.docker.com/v2/repositories/ondrejnedoma/voyalert-backend/tags/" | jq -r 'if has("results") and (.results | length > 0) then .results[0].name else "0" end')
          if [ "$DOCKER_HUB_TAG" == "$PACKAGE_JSON_VERSION" ]; then
            echo "Latest tag on Docker Hub matches version in package.json"
            echo "version=false" >> "$GITHUB_OUTPUT"
          else
            echo "Latest tag on Docker Hub does not match version in package.json, will build and push image to Docker Hub"
            echo "version=$PACKAGE_JSON_VERSION" >> "$GITHUB_OUTPUT"
          fi
  build:
    runs-on: ubuntu-latest
    needs: evaluate-version
    env:
      VERSION: ${{ needs.evaluate-version.outputs.version }}
    if: ${{ needs.evaluate-version.outputs.version != 'false' }}
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        id: docker-build
        run: |
          echo "Building Docker image with tag: $VERSION"
          docker build -t ondrejnedoma/voyalert-backend:$VERSION ./packages/backend
      - name: Log in to Docker Hub
        id: docker-login
        run: |
          echo "logging in to Docker Hub"
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
      - name: Push the image to Docker Hub
        id: docker-push
        run: |
          docker push ondrejnedoma/voyalert-backend:$VERSION
          echo "Pushed image to Docker Hub"
