name: BUILD app => APK, AAB => GitHub releases

on:
  push:
    branches: ['master']
  workflow_dispatch:

permissions:
  contents: write

env:
  VOYALERT_UPLOAD_KEY_ALIAS: ${{ secrets.VOYALERT_UPLOAD_KEY_ALIAS }}
  VOYALERT_UPLOAD_STORE_PASSWORD: ${{ secrets.VOYALERT_UPLOAD_STORE_PASSWORD }}
  VOYALERT_UPLOAD_KEY_PASSWORD: ${{ secrets.VOYALERT_UPLOAD_KEY_PASSWORD }}
jobs:
  evaluate-version-gh:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.compare-versions.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Ger package.json version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/app
      - name: Compare package.json version and latest GitHub releases version
        id: compare-versions
        env:
          PACKAGE_JSON_VERSION: ${{ steps.package-version.outputs.current-version }}
        run: |
          GITHUB_VERSION=$(curl -s "https://api.github.com/repos/ondrejnedoma/voyalert/releases" | jq -r 'if length > 0 then .[0].name else "0" end')
          if [ "$GITHUB_VERSION" == "$PACKAGE_JSON_VERSION" ]; then
            echo "Latest version on GitHub releases matches version in package.json"
            echo "version=false" >> "$GITHUB_OUTPUT"
          else
            echo "Latest version on GitHub releases does not match version in package.json, will build and make GitHub release"
            echo "version=$PACKAGE_JSON_VERSION" >> "$GITHUB_OUTPUT"
          fi
  build:
    runs-on: ubuntu-latest
    needs: evaluate-version-gh
    env:
      VERSION: ${{ needs.evaluate-version-gh.outputs.version }}
    if: ${{ needs.evaluate-version-gh.outputs.version != 'false' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Install dependencies
        run: |
          npm install
      - name: Decode keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'voyalert.keystore'
          fileDir: 'packages/app/android/app'
          encodedString: ${{ secrets.VOYALERT_UPLOAD_STORE_BASE64 }}
      - name: Configure signing vars
        run: |
          cd packages/app/android
          echo VOYALERT_UPLOAD_STORE_FILE=voyalert.keystore >> gradle.properties
          echo VOYALERT_UPLOAD_KEY_ALIAS=$VOYALERT_UPLOAD_KEY_ALIAS >> gradle.properties
          echo VOYALERT_UPLOAD_STORE_PASSWORD=$VOYALERT_UPLOAD_STORE_PASSWORD >> gradle.properties
          echo VOYALERT_UPLOAD_KEY_PASSWORD=$VOYALERT_UPLOAD_KEY_PASSWORD >> gradle.properties
      - name: Build APK
        run: |
          cd packages/app/android
          chmod +x gradlew
          ./gradlew assembleRelease
      - name: Artifact APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: packages/app/android/app/build/outputs/apk/release/*.apk
      - name: Build AAB
        run: |
          cd packages/app/android
          chmod +x gradlew
          ./gradlew bundleRelease
      - name: Artifact AAB
        uses: actions/upload-artifact@v4
        with:
          name: aab
          path: packages/app/android/app/build/outputs/bundle/release/app-release.aab
      - name: Create partial changelog
        run: |
          awk 's{ print ""; print}; $0~v {print; s=1; next}; s=0' RS= v=$VERSION CHANGELOG.md | awk 'NR>1' > changelog-partial.md
      - name: Artifact partial changelog
        uses: actions/upload-artifact@v4
        with:
          name: partial-changelog
          path: changelog-partial.md
  push-gh:
    runs-on: ubuntu-latest
    needs:
      - evaluate-version-gh
      - build
    env:
      VERSION: ${{ needs.evaluate-version-gh.outputs.version }}
    if: ${{ needs.evaluate-version-gh.outputs.version != 'false' }}
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: apk
      - name: Download partial changelog artifact
        uses: actions/download-artifact@v4
        with:
          name: partial-changelog
      - name: 'Create GitHub release'
        uses: ncipollo/release-action@v1
        with:
          artifacts: '*.apk'
          bodyFile: changelog-partial.md
          tag: ${{ env.VERSION}}
